<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Mari menjadi Software Quality Engineer | Penguji Mutu Program Komputer</title>
    <link href="https://penguji.id/feed.xml" rel="self" />
    <link href="https://penguji.id" />
    <updated>2019-06-09T22:27:42+07:00</updated>
    <author>
        <name>Fachrul Choliluddin</name>
    </author>
    <id>https://penguji.id</id>

    <entry>
        <title>Kenapa aplikasi/program perlu di tes dulu?</title>
        <author>
            <name>Fachrul Choliluddin</name>
        </author>
        <link href="https://penguji.id/kenapa-harus-dites/"/>
        <id>https://penguji.id/kenapa-harus-dites/</id>

        <updated>2019-06-09T22:21:55+07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://penguji.id/media/posts/4/60-km-h-accident-airbag-163016.jpg" alt="" />
                    Tidak ada gading yang tak retak, manusia cenderung melakukan kesalahan, dalam kesempatan ini kita akan bahas terkhusus pada rekayasa perangkat lunak, bahwa sering kali permasalahan yang timbul dikarenakan kurang memperhatikan hal-hal penting, salah asumsi, ceroboh, atau bahkan tidak tahu pasti apa yang dikerjakan sistem. Kita&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://penguji.id/media/posts/4/60-km-h-accident-airbag-163016.jpg" alt="" />
                <p>Tidak ada gading yang tak retak, manusia cenderung melakukan kesalahan, dalam kesempatan ini kita akan bahas terkhusus pada rekayasa perangkat lunak, bahwa sering kali permasalahan yang timbul dikarenakan kurang memperhatikan hal-hal penting, salah asumsi, ceroboh, atau bahkan tidak tahu pasti apa yang dikerjakan sistem. Kita akan coba bahas mengenai topik ini ya.</p>
<p>Note: Pengujian yang dimaksud disini tidak terbatas hanya validasi akhir oleh tim QA tapi hal testing secara umum, termasuk juga pengujian oleh developer, unit testing, maupun acceptance oleh PO.</p>
<hr>
<h2 id="mcetoc_1dctasp700">Jadi kenapa aplikasi/program perlu diuji?</h2>
<p>Ok, mari kita bahas kenapa kita perlu melakukan pengujian dalam rekayasa perangkat lunak.</p>
<p>Proses pengujian sejatinya akan memberikan informasi berharga mengenai kondisi dari aplikasi/program, seberapa layak ia memenuhi standar mutu yang diharapkan  dengan cara melakukan verifikasi terhadap sistem apakah sudah memenuhi berbagai kriteria yang diharapkan seperti fungsionalitas, daya kinerja (performance), keandalan (reliability), keamanan (security), dan lain sebagainya. Verifikasi disini adalah memastikan bahwa kita merekayasa perangkat lunak dengan benar.</p>
<hr>
<h2 id="mcetoc_1dctbjbnm1">Apakah sistem sudah bebas masalah jika lolos hasil pengujian?</h2>
<p>Hmm.. terlalu naif jika kita mengatakan sistem sudah bebas masalah, potensi kesalahan yang lolos masih tetap ada walaupun bisa lebih diminimalisir, menemukan masalah/bug/defect bukanlah satu-satunya tujuan dari pengujian aplikasi/program, sejatinya pengujian akan berdampak pada peningkatan kualitas dari produk, karena proses validasi yang dijalankan (jika dilakukan dengan benar) akan menjaga bahwa kita mengerjakan sistem dengan benar, dan deteksi dini masalah yang ada sehingga bisa segera diperbaiki sebelum berdampak luas pada pengguna</p>
<hr>
<h2 id="mcetoc_1dctc1h3f2">Apa yang terjadi jika kita tidak melakukan pengujian aplikasi?</h2>
<p>Risiko akan selalu melekat pada setiap rekayasa perangkat lunak, sistem bisa saja tidak bekerja sebagaimana mestinya, atau proyek pengembangan yang tidak bisa diselesaikan tepat waktu, sehingga terkadang proses pengujian menjadi korban untuk dipersingkat atau bahkan ditiadakan.</p>
<p>Efek dari tidak melakukan pengujian aplikasi sebelum rilis adalah kecerobohan, kita mengirimkan "kucing dalam karung" ke pada pengguna aplikasi, bisa jadi bom waktu yang bisa mencoreng nama baik perusahaan atau bahkan membuat perusahan merugi, atau bahkan bisa saja mengancam jiwa seseorang!</p>
<p>Sebelum kita lanjutkan, hal yang harus kita perhatikan sebagai dampak yang ditimbulkan dari kesalahan pada aplikasi adalah:</p>
<ol>
<li>Manusia. (contoh: menjadi penyebab kecelakaan pada kendaraan, support sistem pasien tidak berfungsi)</li>
<li>Perusahaan. (contoh: salah perhitungan sistem pembayaran yang mengakibatkan perusahaan mengalami kerugian)</li>
<li>Lingkungan (contoh: pelepasan gas kimia atau radiasi ke atmosfir tanpa terdeteksi)</li>
</ol>
Bisa saja suatu ketika karena sebuah kesalahan fatal bisa berdampak pada semua (ke-tiga) sisi tersebut sekaligus, misalkan ada kereta api pengangut limbah kimia ternyata kehilangan kendali atas kemudi kereta atau hilang sambungan komunikasi dan berpotensi terjadi tabrakan dengan KRL commuterline yang berisi ribuan pekerja Bekasi, mana titik temu di Manggarai pula ahaha mirip <a href="https://www.imdb.com/title/tt0477080/">film Unstopabble (2010)</a> ya :D
<p>Kita tentu saja akan sependapat bahwa pengujian pada sistem komunikasi pesawat lebih penting daripada pengujian form pendaftaran mahasiswa baru, kenapa? karena risiko yang ada pada sistem komunikasi pesawat tentu lebih besar, karena efek yang ditimbulkan ketika terjadi kegagalan sistem akan sangat serius. </p>
<p>Seringkali proses pengujian dihadapkan pada segitiga sumber daya, dimana skala prioritas menjadi kompromi, karena memaksimalkan ketiganya menjadi hal yang cukup sulit diwujudkan.</p>
<p><img class="post__image" src="https://penguji.id/media/posts/4/segitiga-sumberdaya-proyek.png" alt="" width="489" height="279"></p>
<p> </p>
<h2 id="mcetoc_1dcucn4gp0">Kesimpulan</h2>
<p>Tujuan dilaksanakannya proses pengujian adalah untuk memastikan bahwa fitur utama pada fungsionalitas dan non-fungsional sudah dipastikan sebelum aplikasi/program memasuki tahap lebih lanjut, dan segala kesalahan yang ada telah dilaporkan pada tim pengembang untuk ditindaklanjuti. Pengujian tidak bisa menghilangkan kesalahan ataupun meningkatkan kualitas secara langsung, melainkan dengan penemuan masalah tersebuat diawal sehingga perbaikan bisa segera dilaksanakan dan berkontribusi terhadap peningkatan mutu program.</p>
<p>Aktifitas pengujian program ini hanyalah satu komponen dari keseluruhan proses penjagaan mutu aplikasi/program dengan mengidentifikasi masalah yang bisa menimbulkan kesalahan serius bagi penguna dan perusahaan nantinya.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Apa itu Pengujian Aplikasi Komputer?</title>
        <author>
            <name>Fachrul Choliluddin</name>
        </author>
        <link href="https://penguji.id/apa-itu-pengujian-aplikasi-komputer-software-testing/"/>
        <id>https://penguji.id/apa-itu-pengujian-aplikasi-komputer-software-testing/</id>

        <updated>2019-06-09T22:26:53+07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://penguji.id/media/posts/2/evaluation-1516644_640.jpg" alt="" />
                    Pada kesempatan kali ini kita akan bahas secara umum mengenai Software testing (pengujian program komputer). Kita akan kupas lebih dalam terkait dengan Apa, Kenapa, Siapa, Kapan, Bagaimana (4W1H) pengujian program komputer itu. Pengujian aplikasi/program komputer (software testing) adalah proses menilai kualitas sebuah sistem komputer, salah&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://penguji.id/media/posts/2/evaluation-1516644_640.jpg" alt="" />
                <p>Pada kesempatan kali ini kita akan bahas secara umum mengenai Software testing (pengujian program komputer). Kita akan kupas lebih dalam terkait dengan Apa, Kenapa, Siapa, Kapan, Bagaimana (4W1H) pengujian program komputer itu.</p>
<hr>
<h2 id="mcetoc_1dc7c7gdd0">Apa itu software testing (pengujian aplikasi komputer)?</h2>
<p>Pengujian aplikasi/program komputer (software testing) adalah proses menilai kualitas sebuah sistem komputer, salah satu caranya adalah dengan mencari ketidak sesuaian program (bugs), galat (error) dengan harapan pengguna dalam dokumen requirement.</p>
<p>Pengujian seperti ini akan bisa mengukur kualitas program secara garis besar dari segi ketepatan (correctness), kelengkapan (completeness), kebergunaan (usability), kinerja (performance) dan juga segi fungsional ataupun non-fungsional lainya</p>
<hr>
<h2 id="mcetoc_1dc7c85sf1">Kenapa program perlu diuji?</h2>
<p>Proses pengujian sangat diperlukan, khususnya untuk mencari ketidak sesuaian (kesalahan/bug) yang ada pada aplikasi komputer yang mana bisa jadi ini menimbulkan kecelakaan/kerugian nantinya.</p>
<p>Contohnya:</p>
<ul>
<li>Kesalahan pada aplikasi yang ada pada perangkat medis, bisa jadi berpotensi mengancam jiwa pasien</li>
<li>Kesalahan pemantau limbah nuklir yang berpotensi mengancam kelestarian lingkungan</li>
<li>Kesalahan perhitungan pada perhitungan nilai tukar rupiah pada aplikasi perbangkan/keuangan yang berpotensi mengakibatkan kerugian besar bagi perusahaan</li>
</ul>
<hr>
<h2 id="mcetoc_1dc7c9n8b2">Siapa yang melakukan pengujian?</h2>
<p>Di dalam proses pengembangan agile, kualitas program adalah tanggung jawab bersama, karena kualitas aplikasi komputer / program bukan ditentukan oleh penguji (tester) semata yang berperan sebagai penjaga gawang. Seorang penguji tidak terbatas hanya melakukan pengujian berdasarkan acceptance criteria, karena semua orang dalam tim harus bisa melakukannya, melainkan bekerja sama dengan developer dan product owner untuk memastikan tingkat standar kualitas seperti apa yang harus dicapai bersama.</p>
<p>Bisa jadi bentuk kerja sama ini meliputi pembuatan acceptance criteria yang tepat, kesepakatan definition of done, diskusi dengan developer mengenai strategi pengujian dan pendekatan otomatisasi pengujian yang sesuai, bahkan seorang penguji yang cemerlang mampu mengajarkan ilmu dan cara pengujian yang baik kepada tim, bahkan bisa memberikan pengaruh dan masukan bagi proses pengembangan aplikasi. </p>
<hr>
<h2 id="mcetoc_1dc7cb6rq5">Kapan harusnya pengujian dimulai?</h2>
<p>Itu sebenarnya disesuaikan dengan proses SDLC (software development life cycle) model yang dijalankan oleh tim pengembangan, bisa jadi ada fase khusus untuk pengujian, ataupun bisa jadi fase pengujian membaur dengan fase impementasi kode oleh tim pengembang, yang menarik ada satu mitos (yang saya yakini) bahwa katanya pengujian hanya bisa dilakukan ketika implementasi oleh pengembang sudah selesai, tetapi ternyata pengujian itu bisa (harusnya) dimulai bahkan ketika kode belum ditulis.</p>
<p>pengujian bisa berjalan beriringan (paralel) dengan fase implementasi fitur oleh tim pengembang, contohnya:</p>
<table>
<tbody>
<tr>
<td><strong>Fase</strong></td>
<td><strong>Aktifitas pengujian</strong></td>
</tr>
<tr>
<td>Backlog grooming</td>
<td>Mitigasi risiko, dan potensi efek samping dari requirement tsb, membuat acceptance criteria</td>
</tr>
<tr>
<td>Sprint planning</td>
<td>Memaparkan skenario pengujian pada backlog</td>
</tr>
<tr>
<td>Sprint</td>
<td>Menguji aplikasi secara bertahap dan berkala, kerja sama (pairing) dengan developer terkait assertion (pemastian)</td>
</tr>
<tr>
<td>Deployment</td>
<td>Memantau crashlog / notifikasi kesalahan program</td>
</tr>
</tbody>
</table>
<h2 id="mcetoc_1dc7cerlr6">Bagaimana dikatakan pengujian telah selesai?</h2>
<p>Tidak ada jawaban pasti dalam menjawab pertanyaan ini, pengujian tidaklah memiliki garis akhir yang jelas, tetapi kita bisa menggunakan "risk-based testing" untuk menemukan seberapa luas cakupan pengujian akan dilaksanakan, sehingga kita bisa memfokuskan waktu dan upaya dalam menguji bagian mana saja yang sangat penting.</p>
<p>Pengujian haruslah menyediakan informasi memadai mengenai status dan kestabilan dari sebuah aplikasi komputer, sehingga tim dan pemangku kepentingan bisa mengambil keputusan yang tepat mengenai peluncuran (fitur) aplikasi ataukah tindakan lebih lanjut terkait pengujian jika diperlukan</p>
<h2 id="mcetoc_1dcrokgs60">Prinsip pengujian</h2>
<p>Berdasarkan ISTQB, ada 7 hal dalam prisip pengujian</p>
<ol>
<li>Pengujian menunjukan adanya masalah (Testing shows the presence of defects)</li>
<li>Pengujian secara menyeluruh adalah kemustahilan (Exhaustive testing is impossible)</li>
<li>Pengujian secara dini (Early testing)</li>
<li>Pengelompokan masalah (Defect clustering)</li>
<li>Kekebalan masalah (Pesticide Paradox)</li>
<li>Pengujian itu relatif dari aplikasinya (Testing is context dependent)</li>
<li>Tidak ditemukan masalah pada pengujian bukan berarti aplikasi tersebut bebas masalah (Absence of errors fallacy)</li>
</ol>
<p>Di artikel lain sebenarnya ada lagi tambahan prinsip:</p>
<ul>
<li>Testing must be done by an independent party.</li>
<li>Assign best personnel to the task.</li>
<li>Test for invalid and unexpected input conditions as well as valid conditions.</li>
<li>Keep software static during test.</li>
<li>Provide expected test results if possible.</li>
</ul>
<p> </p>
<p>Referensi lanjutan:</p>
<ul>
<li><a href="https://www.guru99.com/software-testing-introduction-importance.html">https://www.guru99.com/software-testing-introduction-importance.html</a></li>
<li><a href="https://testautomationu.applitools.com/the-whole-team-approach-to-continuous-testing/index.html">https://testautomationu.applitools.com/the-whole-team-approach-to-continuous-testing/index.html</a> </li>
</ul>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Menjadi Penguji Program Komputer (software tester)</title>
        <author>
            <name>Fachrul Choliluddin</name>
        </author>
        <link href="https://penguji.id/cara-menjadi-software-quality-assurance-tester-test-engineer/"/>
        <id>https://penguji.id/cara-menjadi-software-quality-assurance-tester-test-engineer/</id>

        <updated>2019-06-09T22:26:46+07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://penguji.id/media/posts/1/artificial-intelligence-automation-bookcase-1329068.jpg" alt="" />
                    Selamat datang teman-teman, Pada kesempatan kali ini kita akan belajar sama-sama tentang Software testing (pengujian program komputer) sedari tingkat pemula atau baru meniti karir di dunia per-testingan. Kita akan coba membahas mengenai konsep dan metode pengujian yang telah saya praktikan sehari-hari. Kita awali dari tema&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://penguji.id/media/posts/1/artificial-intelligence-automation-bookcase-1329068.jpg" alt="" />
                <p>Selamat datang teman-teman,</p>
<p>Pada kesempatan kali ini kita akan belajar sama-sama tentang Software testing (pengujian program komputer) sedari tingkat pemula atau baru meniti karir di dunia per-testingan. Kita akan coba membahas mengenai konsep dan metode pengujian yang telah saya praktikan sehari-hari.</p>
<p>Kita awali dari tema dasar pengujian program komputer hingga hal-hal yang lebih rumit lagi nantinya.</p>
<blockquote>
<p>Halaman ini berisi daftar isi dari artikel yang telah dituliskan, jadi akan selalu diperbaharui secara berkala ya, sering-sering berkunjung jadinya ya :) </p>
</blockquote>
<h2 id="mcetoc_1dc7bstvs1">Pengujian Manual untuk pemula</h2>
<p>Pada bagian ini kita akan bahas mengenai beberpaa teori pengujian, diantaranya</p>
<ul>
<li><a href="#INTERNAL_LINK#/post/2" target="_blank" rel="noopener noreferrer">Apa itu Pengujian Program komputer (software testing)?</a></li>
<li><a href="#INTERNAL_LINK#/post/4" target="_blank" rel="noopener noreferrer">Kenapa perlu adanya pengujian?</a></li>
</ul>
            ]]>
        </content>
    </entry>
</feed>
