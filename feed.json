{
    "version": "https://jsonfeed.org/version/1",
    "title": "Mari menjadi Software Quality Engineer | Penguji Mutu Program Komputer",
    "description": "",
    "home_page_url": "https://penguji.id",
    "feed_url": "https://penguji.id/feed.json",
    "user_comment": "",
    "icon": "https://penguji.id/media/website/logo_bawah_300.jpg",
    "author": {
        "name": "Fachrul Choliluddin"
    },
    "items": [
        {
            "id": "https://penguji.id/apa-itu-pengujian-aplikasi-komputer-software-testing/",
            "url": "https://penguji.id/apa-itu-pengujian-aplikasi-komputer-software-testing/",
            "title": "Apa itu Pengujian Aplikasi Komputer?",
            "summary": "Pada kesempatan kali ini kita akan bahas secara umum mengenai Software testing (pengujian program komputer). Kita akan kupas lebih dalam terkait dengan Apa, Kenapa, Siapa, Kapan, Bagaimana (4W1H) pengujian program komputer itu. Pengujian aplikasi/program komputer (software testing) adalah proses menilai kualitas sebuah sistem komputer, salah&hellip;",
            "content_html": "<p>Pada kesempatan kali ini kita akan bahas secara umum mengenai Software testing (pengujian program komputer). Kita akan kupas lebih dalam terkait dengan Apa, Kenapa, Siapa, Kapan, Bagaimana (4W1H) pengujian program komputer itu.</p>\n<hr>\n<h2 id=\"mcetoc_1dc7c7gdd0\">Apa itu software testing (pengujian aplikasi komputer)?</h2>\n<p>Pengujian aplikasi/program komputer (software testing) adalah proses menilai kualitas sebuah sistem komputer, salah satu caranya adalah dengan mencari ketidak sesuaian program (bugs) dengan harapan pengguna dalam dokumen requirement.</p>\n<p>Pengujian seperti ini akan bisa mengukur kualitas program secara garis besar dari segi ketepatan (correctness), kelengkapan (completeness), kebergunaan (usability), kinerja (performance) dan juga segi fungsional ataupun non-fungsional lainya</p>\n<hr>\n<h2 id=\"mcetoc_1dc7c85sf1\">Kenapa program perlu diuji?</h2>\n<p>Pengujian program akan dilakukan dalam fase pengembangan program komputer, karena:</p>\n<ul>\n<li>Mengetahui kualitas program sebelum digunakan penguna sesungguhnya, apakah sudah memenuhi standar kualitas yang diharapkan</li>\n<li>Menghindari kesalahan program, jangan sampai kesalahan ini menyusahkan pengguna, karena akan berimbas pada reputasi perusahaan</li>\n<li>Menghadirkan rasa aman, dan percaya diri untuk melepaskan fitur/program baru untuk dikonsumsi khalayak</li>\n<li>Menemukan kesalahan di fase awal tentu akan menghemat beban perbaikan daripada ketika ditemukannya kesalahan di fase production</li>\n<li>Tim penguji akan memberikan sudut pandang yang berbeda dalam pengunaan program komputer</li>\n</ul>\n<hr>\n<h2 id=\"mcetoc_1dc7c9n8b2\">Siapa yang melakukan pengujian?</h2>\n<p>Setiap anggota tim pengembangan memiliki peran dalam meningkatkan dan menjaga mutu program yang baik, pengujian ini beraneka ragam sesuai dengan tingkatannya, kurang lebih:</p>\n<ul>\n<li>Product owner: menguji apakah ide fitur pada program sungguh-sungguh berguna bagi user, dan apakah sudah tepat guna</li>\n<li>Developer: mengerjakan unit testing dalam rangka memastikan setiap kode yang dituliskan bekerja sebagaimana mestinya, dan tahan akan perubahan kode dimasa depan</li>\n<li>Tester: memastikan program bekerja secara fungsional, kebergunaan, kinerja, dan keamanan program.</li>\n<li>Lead/Manager/Architecs: mengawal ataupun merencanakan strategi dan rencana pengujian</li>\n</ul>\n<hr>\n<h2 id=\"mcetoc_1dc7cb6rq5\">Kapan harusnya pengujian dimulai?</h2>\n<p>Itu sebenarnya disesuaikan dengan proses SDLC (software development life cycle) model yang dijalankan oleh tim pengembangan, bisa jadi ada fase khusus untuk pengujian, ataupun bisa jadi fase pengujian membaur dengan fase impementasi kode oleh tim pengembang, yang menarik ada satu mitos (yang saya yakini) bahwa katanya pengujian hanya bisa dilakukan ketika implementasi oleh pengembang sudah selesai, tetapi ternyata pengujian itu bisa (harusnya) dimulai bahkan ketika kode belum ditulis.</p>\n<p>pengujian bisa berjalan beriringan (paralel) dengan fase implementasi fitur oleh tim pengembang, contohnya melalui V model.</p>\n<table>\n<tbody>\n<tr>\n<td><strong>Fase</strong></td>\n<td><strong>Aktifitas pengujian</strong></td>\n</tr>\n<tr>\n<td>Perancangan Requirement</td>\n<td>Membuat acceptance criteria</td>\n</tr>\n<tr>\n<td>Spesifikasi fungsional</td>\n<td>Membuat skenario fungsional</td>\n</tr>\n<tr>\n<td>Implementasi</td>\n<td>Membuat otomatisasi pengujian</td>\n</tr>\n<tr>\n<td>Kode selesai</td>\n<td>Menjalankan rencana pengujian</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"mcetoc_1dc7cerlr6\">Bagaimana dikatakan pengujian telah selesai?</h2>\n<p>Pengujian bisa dijalankan secara manual ataupun (dan) secara otomatisasi. pengujian manual seperti verifikasi rancangan requirement, mengatur strategi dan rencana pengujian, persiapan data, regression test, dan eksekusi pengujian, sedangkan pengujian otomatisasi seperti membuat script untuk unit testing, integration test, UI test, performance test, bahkan security test dengan bantuan aplikasi dan program khusus sesuai kebutuhan.</p>\n<p> </p>\n<p>Referensi lanjutan:</p>\n<ul>\n<li><a href=\"https://www.guru99.com/software-testing-introduction-importance.html\">https://www.guru99.com/software-testing-introduction-importance.html</a></li>\n<li><a href=\"https://testautomationu.applitools.com/the-whole-team-approach-to-continuous-testing/index.html\">https://testautomationu.applitools.com/the-whole-team-approach-to-continuous-testing/index.html</a> </li>\n</ul>",
            "image": "https://penguji.id/media/posts/2/background-blank-craft-301703.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-06-01T16:25:57+07:00",
            "date_modified": "2019-06-02T00:44:36+07:00"
        },
        {
            "id": "https://penguji.id/cara-menjadi-software-quality-assurance-tester-test-engineer/",
            "url": "https://penguji.id/cara-menjadi-software-quality-assurance-tester-test-engineer/",
            "title": "Menjadi Penguji Program Komputer (software tester)",
            "summary": "Selamat datang teman-teman, Pada kesempatan kali ini kita akan belajar sama-sama tentang Software testing (pengujian program komputer) sedari tingkat pemula atau baru meniti karir di dunia per-testingan. Kita akan coba membahas mengenai konsep dan metode pengujian yang telah saya praktikan sehari-hari. Kita awali dari tema&hellip;",
            "content_html": "<p>Selamat datang teman-teman,</p>\n<p>Pada kesempatan kali ini kita akan belajar sama-sama tentang Software testing (pengujian program komputer) sedari tingkat pemula atau baru meniti karir di dunia per-testingan. Kita akan coba membahas mengenai konsep dan metode pengujian yang telah saya praktikan sehari-hari.</p>\n<p>Kita awali dari tema dasar pengujian program komputer hingga hal-hal yang lebih rumit lagi nantinya.</p>\n<blockquote>\n<p>Halaman ini berisi daftar isi dari artikel yang telah dituliskan, jadi akan selalu diperbaharui secara berkala ya, sering-sering berkunjung jadinya ya :) </p>\n</blockquote>\n<h2 id=\"mcetoc_1dc7bstvs1\">Pengujian Manual untuk pemula</h2>\n<p>Pada bagian ini kita akan bahas mengenai beberpaa teori pengujian, diantaranya</p>\n<ul>\n<li>Apa itu Pengujian Program komputer (software testing)?</li>\n<li>Kenapa perlu adanya pengujian?</li>\n</ul>",
            "image": "https://penguji.id/media/posts/1/artificial-intelligence-automation-bookcase-1329068.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-06-01T06:23:08+07:00",
            "date_modified": "2019-06-02T00:12:24+07:00"
        }
    ]
}
